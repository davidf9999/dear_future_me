
services:
  chroma:
    image: chromadb/chroma:latest
    container_name: chroma
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]   # built-in
      interval: 30s
      timeout: 5s
      retries: 3
    ports:
      - "8001:8000"          # hostPort:containerPort
    volumes:
      - chroma_data:/data
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000

  web:
    build: .
    container_name: dear_future_me
    restart: unless-stopped
    depends_on:
      chroma:
        condition: service_healthy      # wait for vector store
    env_file:
      - .env
    environment:
      - CHROMA_DIR=/data                # 〈── matches processor.py
      # Ensure the FastAPI app knows where Chroma is
      - CHROMA_SERVER_HOST=chroma       # Use the service name
      - CHROMA_SERVER_HTTP_PORT=8000    # Use the container port
    volumes:
      - chroma_data:/data               # mount same volume read-only
    ports:
      - "8000:8000"

  streamlit:
    build: .                            # Reuse the same Dockerfile if it includes Streamlit dependencies
    container_name: dear_future_me_streamlit
    restart: unless-stopped
    depends_on:
      web:
        condition: service_started      # Wait for the web (FastAPI) service
    env_file:
      - .env
    environment:
      - DFM_API_URL=http://web:8000     # Point Streamlit to the web service using its service name and container port
    ports:
      - "8501:8501"                     # Map host port 8501 to container port 8501 (Streamlit default)
    command: ["streamlit", "run", "streamlit_app.py", "--server.port", "8501", "--server.address", "0.0.0.0"] # Command to run Streamlit

networks:
  default:
    name: dfm_net

volumes:
  chroma_data:
