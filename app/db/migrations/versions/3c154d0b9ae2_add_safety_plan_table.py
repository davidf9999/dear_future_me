"""add safety plan table

Revision ID: 3c154d0b9ae2
Revises: e5f9fba9d91b
Create Date: 2025-05-18 09:47:36.615937

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "3c154d0b9ae2"
down_revision: Union[str, None] = "e5f9fba9d91b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "SafetyPlanTable",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("step_1_warning_signs", sa.Text(), nullable=True),
        sa.Column("step_2_internal_coping", sa.Text(), nullable=True),
        sa.Column("step_3_social_distractions", sa.Text(), nullable=True),
        sa.Column("step_4_help_sources", sa.Text(), nullable=True),
        sa.Column("step_5_professional_resources", sa.Text(), nullable=True),
        sa.Column("step_6_environment_risk_reduction", sa.Text(), nullable=True),
        sa.Column(
            "created_at", sa.TIMESTAMP(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.TIMESTAMP(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False
        ),
        sa.ForeignKeyConstraint(["user_id"], ["UserTable.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.add_column(
        "UserProfileTable",
        sa.Column(
            "created_at", sa.TIMESTAMP(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False
        ),
    )
    op.add_column(
        "UserProfileTable",
        sa.Column(
            "updated_at", sa.TIMESTAMP(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False
        ),
    )
    op.alter_column("UserProfileTable", "user_id", existing_type=sa.NUMERIC(), type_=sa.UUID(), existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("UserProfileTable", "user_id", existing_type=sa.UUID(), type_=sa.NUMERIC(), existing_nullable=False)
    op.drop_column("UserProfileTable", "updated_at")
    op.drop_column("UserProfileTable", "created_at")
    op.create_table(
        "user",
        sa.Column("first_name", sa.VARCHAR(), nullable=True),
        sa.Column("last_name", sa.VARCHAR(), nullable=True),
        sa.Column("id", sa.CHAR(length=36), nullable=False),
        sa.Column("email", sa.VARCHAR(length=320), nullable=False),
        sa.Column("hashed_password", sa.VARCHAR(length=1024), nullable=False),
        sa.Column("is_active", sa.BOOLEAN(), nullable=False),
        sa.Column("is_superuser", sa.BOOLEAN(), nullable=False),
        sa.Column("is_verified", sa.BOOLEAN(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_user_email", "user", ["email"], unique=1)
    op.drop_table("SafetyPlanTable")
    # ### end Alembic commands ###
